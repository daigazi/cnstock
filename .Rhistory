industry="factor",price="numeric",
intro="character",RCurlheader="character",
baseUrl="character",appendUrl="character",
sleepSec="numeric",save="logical",path="character"),
methods=list(
#构造方法
initialize=function(name,stockno,industry,price,intro){
# 给属性增加默认值
name <<- '浦发银行'
stockNo <<- "600000"
industry<<-factor("银行")
price<<-10
intro<<-"一家银行"
RCurlheader<<- c(
"User-Agent"="Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) ",
"Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
"Accept-Language"="en-us",
"Connection"="keep-alive",
"Accept-Charset"="GB2312,utf-8;q=0.7,*;q=0.7"
)
baseUrl<<-"http://quotes.money.163.com/service/zycwzb_"
appendUrl<<-".html?type=report"
sleepSec<<-3
save <<- TRUE
path <<- "data"
}
)
)
stock60000=cnstock$new()
cnstock$methods(
loadStockName=function(){
# load stock name from web
library(rvest)
library(RCurl)
library(XML)
url="http://bbs.10jqka.com.cn/codelist.html"
web=read_html(url,encoding = "GBK")
stockName=web  %>% html_nodes(".bbsilst_wei3 a") %>% html_text()
stockName=stockName[-1]
stockName=iconv(x = stockName,from = "utf-8",to = "GBK")
if(save){
if(file.exists(path)){
path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=path)
}
else{
path=paste(path,"/stockName.csv",sep="")
dir.create(path = path,recursive = T)
write.csv(x=stockName,file=path)
}
}
else{
return(stockName)
}
}
)
stock60000$loadStockName()
traceback
trace
cnstock$methods(
loadStockName=function(){
# load stock name from web
library(rvest)
library(RCurl)
library(XML)
url="http://bbs.10jqka.com.cn/codelist.html"
web=read_html(url,encoding = "GBK")
stockName=web  %>% html_nodes(".bbsilst_wei3 a") %>% html_text()
stockName=stockName[-1]
stockName=iconv(x = stockName,from = "utf-8",to = "GBK")
if(save){
if(file.exists(path)){
path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=path)
}
else{
dir.create(path = path,recursive = T)
path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=path)
}
}
else{
return(stockName)
}
}
)
cnstock$trace(loadStockName,browser)
stock60000$loadStockName()
path="data"
file.exists(path)
paste(path,"/stockName.csv",sep="")
path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=path)
write.csv(x=2,file=path)
path="data"
dir.create(path = path,recursive = T)
paste(path,"/stockName.csv",sep="")
path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=path)
write.csv(x=2,file=path)
rm(list=ls())
cnstock=setRefClass("cnstock",
fields = list(name="character",stockNo="character",
industry="factor",price="numeric",
intro="character",RCurlheader="character",
baseUrl="character",appendUrl="character",
sleepSec="numeric",save="logical",path="character"),
methods=list(
#构造方法
initialize=function(name,stockno,industry,price,intro){
# 给属性增加默认值
name <<- '浦发银行'
stockNo <<- "600000"
industry<<-factor("银行")
price<<-10
intro<<-"一家银行"
RCurlheader<<- c(
"User-Agent"="Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) ",
"Accept"="text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
"Accept-Language"="en-us",
"Connection"="keep-alive",
"Accept-Charset"="GB2312,utf-8;q=0.7,*;q=0.7"
)
baseUrl<<-"http://quotes.money.163.com/service/zycwzb_"
appendUrl<<-".html?type=report"
sleepSec<<-3
save <<- TRUE
path <<- "data"
}
)
)
stock60000=cnstock$new()
cnstock$methods(
loadStockName=function(){
# load stock name from web
library(rvest)
library(RCurl)
library(XML)
url="http://bbs.10jqka.com.cn/codelist.html"
web=read_html(url,encoding = "GBK")
stockName=web  %>% html_nodes(".bbsilst_wei3 a") %>% html_text()
stockName=stockName[-1]
stockName=iconv(x = stockName,from = "utf-8",to = "GBK")
if(save){
if(file.exists(path)){
dir_path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=dir_path)
}
else{
dir.create(path = path,recursive = T)
dir_path=paste(path,"/stockName.csv",sep="")
write.csv(x=stockName,file=dir_path)
}
}
else{
return(stockName)
}
}
)
cnstock$trace(loadStockName,browser)
stock60000$loadStockName()
cnstock$methods(
loadCsvData=function(Csvname="主要财务指标"){
library(rvest)
library(RCurl)
library(XML)
#baseUrl=paste(baseUrl,stockNo,sep="")
url=paste(baseUrl,stockNo,appendUrl,sep="")
tmp=getBinaryURL(url = url,httpHEAD=RCurlheader)
#tmp=getBinaryURL(url = url)
path=paste(path,"/",stockNo,sep="")
if(file.exists(path)){
note=file(paste(path,"/",Csvname,".csv",sep=""),open = "wb")
writeBin(tmp, note)
close(note)
}else{
dir.create(path = path,recursive = T)
note=file(paste(path,"/",Csvname,".csv",sep=""),open = "wb")
writeBin(tmp, note)
close(note)
}
}
)
cnstock$methods(
loadCsvData=function(Csvname="主要财务指标"){
library(rvest)
library(RCurl)
library(XML)
#baseUrl=paste(baseUrl,stockNo,sep="")
url=paste(baseUrl,stockNo,appendUrl,sep="")
tmp=getBinaryURL(url = url,httpHEAD=RCurlheader)
#tmp=getBinaryURL(url = url)
dir_path=paste(path,"/",stockNo,sep="")
if(file.exists(dir_path)){
note=file(paste(dir_path,"/",Csvname,".csv",sep=""),open = "wb")
writeBin(tmp, note)
close(note)
}else{
dir.create(path = dir_path,recursive = T)
note=file(paste(dir_path,"/",Csvname,".csv",sep=""),open = "wb")
writeBin(tmp, note)
close(note)
}
}
)
stock60000$loadCsvData()
cnstock$methods(
realTimePrice=function(){
library(rvest)
library(RCurl)
library(XML)
url="http://quotes.money.163.com/0"
url=paste(url,stockNo,".html#01a02",sep="")
web=read_html(x = url,encoding = "utf-8")
realtimeprice=web %>% html_nodes(".bottom_line .cGreen") %>% html_text()
return(realtimeprice)
}
)
stock60000$realTimePrice()
cnstock$trace(what = realTimePrice,tracer =browser )
stock60000$realTimePrice()
cnstock$trace(what = realTimePrice,browser )
stock60000$realTimePrice()
cnstock$methods(
realTimePrice=function(){
library(rvest)
library(RCurl)
library(XML)
url="http://quotes.money.163.com/0"
url=paste(url,stockNo,".html#01a02",sep="")
web=read_html(x = url,encoding = "utf-8")
realtimeprice=web %>% html_nodes(".bottom_line .cGreen") %>% html_text()
return(realtimeprice)
}
)
cnstock$trace( realTimePrice,browser )
stock60000$realTimePrice()
cnstock$trace(loadStockName,browser) #用来调试loadStockName的
stock60000$loadStockName()
cnstock$methods(
realTimePrice=function(){
library(rvest)
library(RCurl)
library(XML)
url="http://quotes.money.163.com/0"
url=paste(url,stockNo,".html#01a02",sep="")
web=read_html(x = url,encoding = "utf-8")
realtimeprice=web %>% html_nodes(".bottom_line .cGreen") %>% html_text()
return(realtimeprice)
}
)
stock60000$realTimePrice()
stockNo="600000"
url="http://quotes.money.163.com/0"
url=paste(url,stockNo,".html#01a02",sep="")
web=read_html(x = url,encoding = "utf-8")
realtimeprice=web %>% html_nodes(".bottom_line .cGreen") %>% html_text()
web %>% html_nodes(".bottom_line .cGreen") %>% html_text()
web %>% html_nodes(".bottom_line .cGreen")
install.packages("diagram")
library("diagram", lib.loc="~/R/win-library/3.1")
M <- matrix(nrow = 4, ncol = 4, byrow = TRUE, data = 0)
M
pp <- plotmat(M, pos = c(1, 2, 1), name = c("A", "B", "C", "D"),
lwd = 1, box.lwd = 2, cex.txt = 0.8,
box.size = 0.1, box.type = "square", box.prop = 0.5,
main = "plotmat")
pp
example(plotmat)
demo("flowchart") # creating flow charts
demo("flowchart")
browseURL(paste(system.file(package="diagram"), "/doc", sep=""))
rm(list=ls())
par(ask=TRUE)
mar <- par(mar=c(1,1,1,1))
openplotmat(main="from Soetaert and herman, book in prep",cex.main=1)
elpos<-coordinates (c(1,1,1,1,1,1,1,1),mx=-0.1)
elpos
install.packages("DiagrammeR")
library("DiagrammeR", lib.loc="~/R/win-library/3.1")
digraph G {
size ="4,4";
main [shape=box]; /* this is a comment */
main -> parse [weight=8];
parse -> execute;
main -> init [style=dotted];
main -> cleanup;
execute -> { make_string; printf}
init -> make_string;
edge [color=red]; // so is this
main -> printf [style=bold,label="100 times"];
make_string [label="make a\nstring"];
node [shape=box,style=filled,color=".7 .3 1.0"];
execute -> compare;
}
library(DiagrammeR)
grViz("
digraph DAG {
# Intialization of graph attributes
graph [overlap = true]
# Initialization of node attributes
node [shape = box,
fontname = Helvetica,
color = blue,
type = box,
fixedsize = true]
# Initialization of edge attributes
edge [color = green,
rel = yields]
# Node statements
1; 2; 3; 4; 8; 9; 10; 11
# Revision to node attributes
node [shape = circle]
# Node statements
5; 6; 7
# Edge statements
1->5; 2->6; 3->9; 4->7; 5->8; 5->10; 7->11
# Revision to edge attributes
edge [color = red]
# Edge statements
1->8; 3->6; 3->11; 3->7; 5->9; 6->10
}
")
library(magrittr)
graph <-
create_graph() %>%
set_graph_name("DAG") %>%
set_global_graph_attr("graph", "overlap", "true") %>%
set_global_graph_attr("graph", "fixedsize", "true") %>%
set_global_graph_attr("node", "color", "blue") %>%
set_global_graph_attr("node", "fontname", "Helvetica") %>%
add_n_nodes(11) %>%
select_nodes_by_id(1:4) %>%
set_node_attr_with_selection("shape", "box") %>%
set_node_attr_with_selection("type", "box") %>%
clear_selection %>%
select_nodes_by_id(5:7) %>%
set_node_attr_with_selection("shape", "circle") %>%
set_node_attr_with_selection("type", "circle") %>%
clear_selection %>%
select_nodes_by_id(8:11) %>%
set_node_attr_with_selection("shape", "box") %>%
set_node_attr_with_selection("type", "box") %>%
clear_selection %>%
add_edge(1, 5) %>% add_edge(2, 6) %>%
add_edge(3, 9) %>% add_edge(4, 7) %>%
add_edge(5, 8) %>% add_edge(5, 10) %>%
add_edge(7, 11) %>%
select_edges %>%
set_edge_attr_with_selection("color", "green") %>%
add_edge(1, 8) %>% add_edge(3, 6) %>%
add_edge(3, 11) %>% add_edge(3, 7) %>%
add_edge(5, 9) %>% add_edge(6, 10) %>%
select_edges("color", "^$") %>%
set_edge_attr_with_selection("color", "red") %>%
clear_selection
render_graph(graph)
grViz("
digraph DAG {
# Intialization of graph attributes
graph [overlap = true]
# Initialization of node attributes
node [shape = box,
fontname = Helvetica,
color = blue,
type = box,
fixedsize = true]
# Initialization of edge attributes
edge [color = green,
rel = yields]
# Node statements
'总资产收益率';'总资产收益率';'权益乘数';
# Edge statements
'总资产收益率'->'总资产收益率'; '总资产收益率'->'权益乘数';
}
")
grViz("
digraph DAG {
# Intialization of graph attributes
graph [overlap = true]
# Initialization of node attributes
node [shape = box,
fontname = Helvetica,
color = blue,
type = box,
fixedsize = true]
# Initialization of edge attributes
edge [color = green,
rel = yields]
# Node statements
'销售净利率';'总资产收益率';'权益乘数';
# Edge statements
'销售净利率'->'总资产收益率'; '总资产收益率'->'权益乘数';
}
")
rm(list=ls())
# Create an empty graph
graph <- create_graph()
nodes <- create_nodes(nodes = c("a", "b", "c", "d"))
graph <- create_graph(nodes_df = nodes)
# Create a graph with nodes with values, types, labels
nodes <- create_nodes(nodes = c("a", "b", "c", "d"),
label = TRUE,
type = c("type_1", "type_1",
"type_5", "type_2"),
shape = c("circle", "circle",
"rectangle", "rectangle"),
values = c(3.5, 2.6, 9.4, 2.7))
graph <- create_graph(nodes_df = nodes)
# Create a graph from an edge data frame, the nodes will
edges <- create_edges(from = c("a", "b", "c"),
to = c("d", "c", "a"),
rel = "leading_to")
graph <- create_graph(edges_df = edges)
# Create a graph with both nodes and nodes defined, and,
# add some default attributes for nodes and edges
graph <- create_graph(nodes_df = nodes,
edges_df = edges,
node_attrs = "fontname = Helvetica",
edge_attrs = c("color = blue",
"arrowsize = 2"))
## End(Not run)
graph
display_graph_object(graph, width = 640)
graph <- create_graph()
# Create a graph with nodes but no edges
nodes <- create_nodes(nodes = c("a", "b", "c", "d"))
graph <- create_graph(nodes_df = nodes)
display_graph_object(graph, width = 640)
rm(list=ls())
graph <- create_graph()
nodes <- create_nodes(nodes = c("a", "b", "c", "d"))
graph <- create_graph(nodes_df = nodes)
display_graph_object(graph, width = 640)
nodes <- create_nodes(nodes = c("a", "b", "c", "d"),
label = TRUE,
type = c("type_1", "type_1",
"type_5", "type_2"),
shape = c("circle", "circle",
"rectangle", "rectangle"),
values = c(3.5, 2.6, 9.4, 2.7))
graph <- create_graph(nodes_df = nodes)
display_graph_object
display_graph_object(graph, width = 640)
library("RSelenium")
checkForServer()
rm(list=ls())
library("RSelenium")
checkForServer()
startServer(args = c("-Dwebdriver.chrome.driver=C:/Users/dai_jl/chromedriver.exe"))
#打开浏览器
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "chrome")
open_browser$open()
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "chrome")
open_browser$open()
open_browser$navigate("htttp://weibo.com")
open_browser$findElement("xpath","//input[@node-type='username']")
user=open_browser$findElement("xpath","//input[@node-type='username']")
user
startServer()
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 4444
,browserName = "firefox")
open_browser$open()
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "firefox")
open_browser$open()
library("RSelenium")
checkForServer()  #获取Selenium Server stand-alone binary文件
startServer(args = c("-Dwebdriver.chrome.driver=C:/Users/dai_jl/chromedriver.exe"))
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "chrome")
head(open_browser$sessionInfo)
open_browser$open()
startServer()
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 4444
,browserName = "firefox")
open_browser$open()
library("RSelenium")
checkForServer()  #获取Selenium Server stand-alone binary文件
#启动Selenium Server
startServer()
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "firefox")
open_browser$open()
startServer(args = c("-Dwebdriver.chrome.driver=C:/Users/dai_jl/chromedriver.exe"))
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "chrome")
open_browser$open()
rm(list=ls())
library("RSelenium")
checkForServer()  #获取Selenium Server stand-alone binary文件
#启动Selenium Server
#startServer()
startServer(args = c("-Dwebdriver.chrome.driver=C:/Users/dai_jl/chromedriver.exe"))
open_browser=remoteDriver(remoteServerAddr = "localhost"
, port = 9515
,browserName = "chrome")
# open_browser=remoteDriver(remoteServerAddr = "localhost"
#                           , port = 9515
#                           ,browserName = "firefox")
head(open_browser$sessionInfo)
open_browser$open()
